package lab1proyectofinal.vistas;

import java.time.LocalDate;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import lab1proyectofinal.accesoADatos.BomberoData;
import lab1proyectofinal.accesoADatos.BrigadaData;
import lab1proyectofinal.accesoADatos.CuartelData;
import lab1proyectofinal.accesoADatos.Utils;
import lab1proyectofinal.entidades.Bombero;
import lab1proyectofinal.entidades.Brigada;
import lab1proyectofinal.entidades.Cuartel;

/**
 *
 * @author Grupo-3
 */
public class GestionBombero extends javax.swing.JInternalFrame {

    private final BomberoData bomberoData;
    private final BrigadaData brigadaData;
    private final CuartelData cuartelData;

    /**
     * Creates new form GestionBombero
     */
    public GestionBombero(CuartelData cuartelData, BrigadaData brigadaData, BomberoData bomberoData) {
        initComponents();
        this.cuartelData = cuartelData;
        this.brigadaData = brigadaData;
        this.bomberoData = bomberoData;
    }

    private void limpiarCampos() {
        bomberoCB.setSelectedIndex(-1);
        dniTF.setText("");
        nombreTF.setText("");
        grupoSanguineoCB.setSelectedIndex(-1);
        fechaNacimientoDC.setCalendar(null);
        celularTF.setText("");
        cuartelCB.setSelectedIndex(-1);
        brigadaCB.setSelectedIndex(-1);
    }

    private void setFieldsEditable(boolean flag) {
        dniTF.setEditable(flag);
        nombreTF.setEditable(flag);
        grupoSanguineoCB.setEnabled(flag);  // No hay un ineditable
        fechaNacimientoDC.setEnabled(flag); // No hay un ineditable
        celularTF.setEditable(flag);
        cuartelCB.setEnabled(flag);         // No hay un ineditable
        brigadaCB.setEnabled(flag);         // No hay un ineditable
        BtnGuardar.setEnabled(flag);
    }

    private void setFieldsEnabled(boolean flag) {
        dniTF.setEnabled(flag);
        nombreTF.setEnabled(flag);
        //grupoSanguineoCB.setEnabled(flag);  // No hay un ineditable
        //fechaNacimientoDC.setEnabled(flag); // No hay un ineditable
        celularTF.setEnabled(flag);
        //cuartelCB.setEnabled(flag);         // No hay un ineditable
        //brigadaCB.setEnabled(flag);         // No hay un ineditable
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bomberoLabel = new javax.swing.JLabel();
        bomberoCB = new javax.swing.JComboBox<>();
        dniLabel = new javax.swing.JLabel();
        dniTF = new javax.swing.JTextField();
        nombreLabel = new javax.swing.JLabel();
        nombreTF = new javax.swing.JTextField();
        grupoSanguineoLabel = new javax.swing.JLabel();
        grupoSanguineoCB = new javax.swing.JComboBox<>();
        fechaNacimientoLabel = new javax.swing.JLabel();
        fechaNacimientoDC = new com.toedter.calendar.JDateChooser();
        celularLabel = new javax.swing.JLabel();
        celularTF = new javax.swing.JTextField();
        cuartelLabel = new javax.swing.JLabel();
        cuartelCB = new javax.swing.JComboBox<>();
        brigadaLabel = new javax.swing.JLabel();
        brigadaCB = new javax.swing.JComboBox<>();
        BtnEditar = new javax.swing.JButton();
        BtnGuardar = new javax.swing.JButton();
        BtnEliminar = new javax.swing.JButton();
        BtnSalir = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Gestión Bombero");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        bomberoLabel.setText("Bombero:");

        bomberoCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bomberoCBActionPerformed(evt);
            }
        });

        dniLabel.setText("DNI:");

        nombreLabel.setText("Nombre Completo:");

        grupoSanguineoLabel.setText("Grupo Sanguíneo:");

        grupoSanguineoCB.setModel(new javax.swing.DefaultComboBoxModel<>(Utils.obtenerGrupoSanguineo()));

        fechaNacimientoLabel.setText("Fecha Nacimiento:");

        celularLabel.setText("Celular:");

        cuartelLabel.setText("Cuartel:");

        cuartelCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuartelCBActionPerformed(evt);
            }
        });

        brigadaLabel.setText("Brigada:");

        BtnEditar.setText("Editar");
        BtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditarActionPerformed(evt);
            }
        });

        BtnGuardar.setText("Guardar");
        BtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarActionPerformed(evt);
            }
        });

        BtnEliminar.setText("Dar de Baja");
        BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarActionPerformed(evt);
            }
        });

        BtnSalir.setText("Salir");
        BtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cuartelLabel)
                            .addComponent(brigadaLabel))
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cuartelCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(brigadaCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreLabel)
                            .addComponent(grupoSanguineoLabel)
                            .addComponent(fechaNacimientoLabel)
                            .addComponent(celularLabel)
                            .addComponent(dniLabel)
                            .addComponent(bomberoLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bomberoCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dniTF)
                            .addComponent(fechaNacimientoDC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nombreTF, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(grupoSanguineoCB, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(celularTF)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(BtnGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(BtnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 285, Short.MAX_VALUE)
                        .addComponent(BtnSalir)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bomberoLabel)
                    .addComponent(bomberoCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dniLabel)
                    .addComponent(dniTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreLabel)
                    .addComponent(nombreTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grupoSanguineoLabel)
                    .addComponent(grupoSanguineoCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fechaNacimientoLabel)
                    .addComponent(fechaNacimientoDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(celularLabel)
                    .addComponent(celularTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuartelLabel)
                    .addComponent(cuartelCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brigadaLabel)
                    .addComponent(brigadaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnEditar)
                    .addComponent(BtnGuardar)
                    .addComponent(BtnEliminar)
                    .addComponent(BtnSalir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        bomberoCB.removeAllItems();
        cuartelCB.removeAllItems();
        List<Bombero> bomberos = bomberoData.listarBomberos();
        for (Bombero bombero : bomberos) {
            bomberoCB.addItem(bombero);
        }
        List<Cuartel> cuarteles = cuartelData.listarCuarteles();
        for (Cuartel cuartel : cuarteles) {
            cuartelCB.addItem(cuartel);
        }
        bomberoCB.setSelectedIndex(-1);
    }//GEN-LAST:event_formInternalFrameActivated

    private void bomberoCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bomberoCBActionPerformed
        setFieldsEditable(false);
        Bombero bomberoSeleccionado = (Bombero) bomberoCB.getSelectedItem();
        if (bomberoSeleccionado != null) {
            dniTF.setText(Integer.toString(bomberoSeleccionado.getDni()));
            nombreTF.setText(bomberoSeleccionado.getNombreCompleto());
            grupoSanguineoCB.setSelectedItem(bomberoSeleccionado.getGrupoSanguineo());
            fechaNacimientoDC.setCalendar(Utils.localDateToCalendar(bomberoSeleccionado.getFechaNacimiento()));
            celularTF.setText(bomberoSeleccionado.getCelular());
            cuartelCB.setSelectedItem(bomberoSeleccionado.getBrigada().getCuartel());
            brigadaCB.setSelectedItem(bomberoSeleccionado.getBrigada());
            BtnEditar.setEnabled(true);
            BtnEliminar.setEnabled(true);
            setFieldsEnabled(true);
        } else {
            limpiarCampos();
            BtnEditar.setEnabled(false);
            BtnEliminar.setEnabled(false);
            setFieldsEnabled(false);
            if (bomberoCB.getItemCount() == 0) {
                bomberoCB.setEnabled(false);
            } else {
                bomberoCB.setEnabled(true);
            }
        }
    }//GEN-LAST:event_bomberoCBActionPerformed

    private void BtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditarActionPerformed
        Bombero bomberoSeleccionado = (Bombero) bomberoCB.getSelectedItem();
        if (bomberoSeleccionado != null) {
            BtnEditar.setEnabled(false);
            setFieldsEditable(true);
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione primero un bombero a editar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnEditarActionPerformed

    private void BtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarActionPerformed
        Bombero bomberoSeleccionado = (Bombero) bomberoCB.getSelectedItem();
        if (bomberoSeleccionado == null) {
            JOptionPane.showMessageDialog(this, "Seleccione primero un bombero a editar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String dniStr = dniTF.getText().trim();
        String nombreStr = nombreTF.getText().trim();
        String grupoSanguineoStr = (String) grupoSanguineoCB.getSelectedItem();
        Date date = fechaNacimientoDC.getDate();
        String celularStr = celularTF.getText().trim();
        Cuartel cuartel = (Cuartel) cuartelCB.getSelectedItem();
        Brigada brigada = (Brigada) brigadaCB.getSelectedItem();

        if (dniStr.isBlank() || nombreStr.isBlank() || grupoSanguineoStr == null
                || date == null || celularStr.isBlank() || cuartel == null
                || brigada == null) {
            JOptionPane.showMessageDialog(this, "No puede haber campos vacios.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int dni;
        try {
            dni = Integer.parseInt(dniStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Se esperaba un numero entero en DNI.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!Utils.esTelefonoValido(celularStr)) {
            JOptionPane.showMessageDialog(this, "Se esperaba un numero entero en Celular.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Este caso no deberia ocurrir nunca
        if (!cuartel.equals(brigada.getCuartel())) {
            JOptionPane.showMessageDialog(this, "La brigada no parece pertenecer al cuartel.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtener Local date del calendar
        LocalDate fechaNacimiento = Utils.dateToLocalDate(date);

        Bombero bombero = new Bombero(dni, nombreStr, grupoSanguineoStr, fechaNacimiento, celularStr, brigada);
        bombero.setIdBombero(bomberoSeleccionado.getIdBombero());
        if (bomberoData.modificarBombero(bombero)) {
            JOptionPane.showMessageDialog(this, "Bombero modificado.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo guardar la edición.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnGuardarActionPerformed

    private void BtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarActionPerformed
        Bombero bomberoSeleccionado = (Bombero) bomberoCB.getSelectedItem();
        if (bomberoSeleccionado != null) {
            JOptionPane.showMessageDialog(this, "Seleccione primero un bombero a eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int option = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar este bombero?", "Confirmar eliminacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (option == JOptionPane.YES_OPTION) {
            if (bomberoData.eliminarBombero(bomberoSeleccionado.getIdBombero())) {
                JOptionPane.showMessageDialog(this, "Bombero eliminado.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                brigadaCB.removeItem(bomberoSeleccionado);
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo eliminar.\nAsegurese de que no pertenezca a una brigada que no esté atendiento un siniestro.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_BtnEliminarActionPerformed

    private void BtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirActionPerformed
        this.hide();
    }//GEN-LAST:event_BtnSalirActionPerformed

    private void cuartelCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuartelCBActionPerformed
        brigadaCB.removeAllItems();
        brigadaCB.setEnabled(false);

        Cuartel cuartelSeleccionado = (Cuartel) cuartelCB.getSelectedItem();
        if (cuartelSeleccionado != null) {
            List<Brigada> brigadas = cuartelData.listarBrigadasDelCuartel(cuartelSeleccionado.getCodigoCuartel());
            for (Brigada brigada : brigadas) {
                brigadaCB.addItem(brigada);
            }
            brigadaCB.setSelectedIndex(-1);
            if (brigadaCB.getItemCount() > 0 && BtnGuardar.isEnabled()) {
                brigadaCB.setEnabled(true);
            }
        }
    }//GEN-LAST:event_cuartelCBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnEditar;
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JButton BtnGuardar;
    private javax.swing.JButton BtnSalir;
    private javax.swing.JComboBox<Bombero> bomberoCB;
    private javax.swing.JLabel bomberoLabel;
    private javax.swing.JComboBox<Brigada> brigadaCB;
    private javax.swing.JLabel brigadaLabel;
    private javax.swing.JLabel celularLabel;
    private javax.swing.JTextField celularTF;
    private javax.swing.JComboBox<Cuartel> cuartelCB;
    private javax.swing.JLabel cuartelLabel;
    private javax.swing.JLabel dniLabel;
    private javax.swing.JTextField dniTF;
    private com.toedter.calendar.JDateChooser fechaNacimientoDC;
    private javax.swing.JLabel fechaNacimientoLabel;
    private javax.swing.JComboBox<String> grupoSanguineoCB;
    private javax.swing.JLabel grupoSanguineoLabel;
    private javax.swing.JLabel nombreLabel;
    private javax.swing.JTextField nombreTF;
    // End of variables declaration//GEN-END:variables
}
